//This is only executed when the map is loaded for the first time. //Only happens once. Can be used for adding effects and callbacks that should not repeat.//
void OnStart()

{
  CreateParticleSystemAtEntity("VannVegg", "ps_childsnake_water_stream.ps", "VannFraVeggen", true);
  SetEntityPlayerInteractCallback("Crowbar", "InteractCrowbar", true);
  AddEntityCollideCallback("Player", "FallBox", "Boksefjes", true, 1);
  AddEntityCollideCallback("Player", "NoDust", "DustRemove", true, 1);
  AddEntityCollideCallback("Player", "Skummelt", "FadeOut", true, 1);
  AddEntityCollideCallback("Player", "lurkerspawn", "Plask", true, 1);
  AddUseItemCallback("", "crowbar_1", "castle_5", "UsedCrowbarOnDoor", true);
AddEntityCollideCallback("crowbar_joint_1", "ScriptArea_1", "CollideAreaBreakDoor", true, 1);
}
void Boksefjes(string &in asParent, string &in asChild, int alState)
{
  StartScreenShake(0.03f, 1.0f, 4.0f,8.0f);
  PlaySoundAtEntity("guardboo", "guardian_activated", "Player", 2.0f, false);
  CreateParticleSystemAtEntity("FallingDust", "ps_dust_falling_door.ps", "Dust", true);
  CreateParticleSystemAtEntity("PSGhostWind", "ps_dust_whirl.ps", "AreaGhostWind", false);
  CreateParticleSystemAtEntity("PSGhostWind", "ps_dust_whirl.ps", "AreaGhostWind_1", false);
  CreateParticleSystemAtEntity("PSGhostWind", "ps_dust_whirl.ps", "AreaGhostWind_2", false);
  CreateParticleSystemAtEntity("PSGhostWind", "ps_dust_whirl.ps", "AreaGhostWind_3", false);
  CreateParticleSystemAtEntity("PSGhostWind", "ps_dust_whirl.ps", "AreaGhostWind_4", false);
  CreateParticleSystemAtEntity("PSGhostWind", "ps_dust_whirl.ps", "AreaGhostWind_5", false);
  PlaySoundAtEntity("whirly", "general_wind_whirl2.snt", "Player", 4, false);
  AddTimer("", 2.5, "Snu");
}
void DustRemove(string &in asParent, string &in asChild, int alState)
{
  DestroyParticleSystem("ps_dust_falling_door.ps");
  DestroyParticleSystem("ps_dust_whirl.ps");
}
void Plask(string &in asParent, string &in asChild, int alState)
{
  StartPlayerLookAt("Smash", 1, 10, "");
  AddTimer("", 4.0, "Vannplask");
}

void Vannplask(string &in asTimer)
{
  StopPlayerLookAt();
  SetPropHealth("castle_3", 0);
  SetEntityActive("Lurker", true);
  ShowEnemyPlayerPosition("Lurker");
}

void FadeOut(string &in asParent, string &in asChild, int alState)
{
  FadeOut(0.3);

	AddTimer("scare", 0.3f, "TimerPlayerReact");
	AddTimer("breath", 2.0f, "TimerPlayerReact");
	AddTimer("breathl", 4.0f, "TimerPlayerReact");
	AddTimer("breathl", 6.0f, "TimerPlayerReact");

	AddTimer("TeleportHowl", 0.5f, "TimerTeleportHowl");
	AddTimer("TeleportDone", 3.5f, "TimerTelportDone");

	PlaySoundAtEntity("stomp","scare_wall_stomp","Player", 0, false);
	PlaySoundAtEntity("darkamb","07_amb_breath","Player", 5, false);
	PlaySoundAtEntity("wateramb", "ambience_water_no3d.snt", "sound_idle_1", 5, true);

	FadePlayerFOVMulTo(4.0f, 4.0f);
	SetRadialBlurStartDist(0.1f);
	FadeRadialBlurTo(1.0f, 5.0f);

	StartEffectFlash(0.2, 0.1,0.3);

	FadeGlobalSoundVolume(0, 0.3);
	StopMusic(0.3f, 0);
	StartScreenShake(0.1, 4.7, 0.05, 0.5);

	FadePlayerFOVMulTo(0.5, 3);
}
void TimerTeleportHowl(string &in asTimer)
{
	PlaySoundAtEntity("howl","guardian_activated.snt","Player", 0, false);
	SetPlayerActive(false);
}

void TimerTelportDone(string &in asTimer)
{
	TeleportPlayer("PlayerStartArea_2");
	FadeGlobalSoundVolume(1,2);
	SetPlayerActive(true);
	FadePlayerFOVMulTo(1.0f, 0.5f);
	FadeRadialBlurTo(0.0f, 1.0f);
	FadeIn(1.3);

	FadePlayerFOVMulTo(1, 1);
}


void InteractCrowbar(string &in asEntity)
{
	SetEntityActive("skummelt", true);
  SetEntityActive("lurkerspawn", true);
}

void Snu(string &in asTimer)
{
	AddPropForce("box", 2000, 0, 0, "world");
  AddPropForce("box_1", 2000, 0, 0, "world");
  AddPropForce("box_2", 2000, 0, 0, "world");
  AddPropForce("box_3", -2000, 0, 0, "world");
  AddPropForce("box_4", -2000, 0, 0, "world");
  PlaySoundAtEntity("scare", "react_scare.snt", "Player", 0.6f, false);
}
void UsedCrowbarOnDoor(string &in asItem, string &in asEntity)
 {
 AddTimer("", 0.2, "TimerSwitchShovel");
 RemoveItem("crowbar_1");
 }


void TimerSwitchShovel(string &in asTimer)
 {
 PlaySoundAtEntity("","puzzle_place_jar.snt", "", 0, false);
 SetEntityActive("crowbar_joint_1", true);
 }


void CollideAreaBreakDoor(string &in asParent, string &in asChild, int alState)
 {
 AddPlayerSanity(25);
 SetSwingDoorLocked("castle_5", false, true);
 AddPropImpulse("castle_5", 0, 0, -50, "World");
 SetSwingDoorDisableAutoClose("castle_5", true);
 SetSwingDoorClosed("castle_5", false, false);
 SetMoveObjectState("castle_5", 1);
 PlaySoundAtEntity("","break_wood_metal", "AreaBreakEffect", 0, false);
 CreateParticleSystemAtEntity("", "ps_hit_wood", "AreaBreakEffect", false);
 SetEntityActive("crowbar_joint_1", false);
 SetLocalVarInt("Door", 1);
 }
//This is executed every time you enter the level. //Can be executed several times. Can be used for playing music and adding checks.//
void OnEnter()
{

}


//This is executed every time you leave the level. //Can be executed several times. Can be used for stopping music or ending effects.//
void OnLeave()
{

}
