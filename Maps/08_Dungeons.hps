//This is only executed when the map is loaded for the first time. //Only happens once. Can be used for adding effects and callbacks that should not repeat.//
void OnStart()
{
	AddEntityCollideCallback("Player", "skummelt", "tull", true, 1);
	AddEntityCollideCallback("Player", "monster", "tiss", true, 1);
	AddUseItemCallback("", "StoneHammer", "WoodBoard", "Treflis", true);
	AddEntityCollideCallback("Player", "ScriptArea_1", "LookAtAcid", true, 1);
}
void tiss(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("servant_grunt_1", true);
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_1", 0, "");
	AddEnemyPatrolNode("servant_grunt_1", "PathNodeArea_2", 0, "");
	AddTimer("", 15, "Borte");
}
void tull(string &in asParent, string &in asChild, int alState)
{
	SetEntityActive("enemy_suitor_1", true);
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_3", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_4", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_5", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_6", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_7", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_8", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_9", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_10", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_11", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_12", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_13", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_14", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_15", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_16", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_17", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_18", 0, "");
	AddEnemyPatrolNode("enemy_suitor_1", "PathNodeArea_19", 0, "");

}
void Borte(string &in asTimer)
{
	SetEntityActive("servant_grunt_1", false);
}

void Treflis(string &in asItem, string &in asEntity)
{
	SetPropHealth("WoodBoard", 0);
	RemoveItem("StoneHammer");
	SetMessage("Sign", "Sign11", 0);
	CreateParticleSystemAtEntity("", "ps_hit_wood.ps", "WoodHit", true);
	PlaySoundAtEntity("","break_wood_metal", "WoodHit", 0, false);
	GiveSanityBoostSmall();
}
void LookAtAcid(string &in asParent, string &in asChild, int alState)
{
	StartPlayerLookAt("Acid_1", 5, 10, "");
	PlayMusic("15_puzzle_hole.ogg", false, 1.0f, 0.5f, 5, false);
	AddTimer("", 2, "SeBort");
}
void SeBort(string &in asTimer)
{
	StopPlayerLookAt();
}

//This is executed every time you enter the level.
//Can be executed several times. Can be used for playing music and adding checks.//
void OnEnter()
{
	AddEntityCollideCallback("Player", "Musikk", "Trall", true, 1);
}
void Trall(string &in asParent, string &in asChild, int alState)
{
	PlayMusic("01_amb_darkness", true, 1.0f, 1.0f, 0, false);
}

//This is executed every time you leave the level.
//Can be executed several times. Can be used for stopping music or ending effects.//
void OnLeave()
{

}
void Stille(string &in asEntity)
{
 StopMusic(1, 0);
}
